// floyd warshall cycle detection method

#include <bits/stdc++.h>
using namespace std;

int find_duplicate(int a[], int n)
{
    int slow = a[0], fast = a[0];
    do
    {
        slow = a[slow];
        fast = a[a[fast]];
    } while (slow != fast);
    fast = a[0];
    while (slow != fast)
    {
        slow = a[slow];
        fast = a[fast];
    }
    return slow;
}

int main()
{
    cout << "enter the value of n";
    int n;
    cin >> n;
    cout << "enter the array  \n";
    int a[n];
    for (int i = 0; i < n; i++)
    {
        cin >> a[i];
    }
    int ans = find_duplicate(a, n);
    cout << ans;
    return 0;
}
